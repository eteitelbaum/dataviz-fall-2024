---
title: "Make a Map Function"
date: today
date-format: long
footer: "[DataViz 2102 Website](https://dataviz-gwu.rocks)"
logo: images/dataviz-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    #multiplex: true
    chalkboard: true
execute:
  echo: true
  message: false
  warning: false
  freeze: auto
---

# Make a Map Function

## What is a Function

- A reusable piece of code that takes some inputs, performs some operations and returns an output
- Elements
  - Inputs (arguments)
  - Operations (code block)
  - Output (return value)
- Like cooking (to produce a dish, you have a recipe and ingredients)
- Don't repeat yourself (DRY)

## Map Function

```{r}
#| label: map-function0
#| echo: false

source("functions/wb-maps.R", local = knitr::knit_global())

create_map(var_id = "SL.TLF.CACT.FE.ZS", 
           title= "Female Labor Force Participation", 
           legend_title = "FLFP %", 
           theme = "inferno", 
           direction = -1)
```

## Map Function

<br>

```{r}
#| label: map-function0.1
#| eval: false

source("functions/wb-maps.R", local = knitr::knit_global())

create_map(var_id = "SL.TLF.CACT.FE.ZS", 
           title= "Female Labor Force Participation", 
           legend_title = "FLFP %", 
           theme = "inferno", 
           direction = -1)
```

## Map Function

```{r}
#| lable: map-function1
#| echo: true
#| output: false 
#| code-line-numbers: "|7,11,16,18-19,27-28"

library(rnaturalearth)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(wbstats)

create_map <- function(var_id, title, legend_title, theme, direction){

ne_countries(scale = "medium", returnclass = "sf") |> 
  left_join(
    wb_data(var_id, mrnev = 1), 
    join_by(iso_a3 == iso3c)
  ) |> 
  filter(name != "Antarctica") |>  
  ggplot() + 
  geom_sf(aes(fill = eval(parse(text=var_id)))) + 
  labs(
    title =  title, 
    fill = legend_title, 
    caption = "Source: World Bank Development Indicators"
    ) +
  theme_map() +
  theme(
    plot.title = element_text(face = "bold"),
  ) +
  scale_fill_viridis_c( 
    option = theme, 
    direction = direction 
    )
}
```

## Map Function

<br>

Save the source code in a folder... 

<br>

```{r}
#| label: map-function7
#| echo: true
#| output: false

source("functions/wb-maps.R", local = knitr::knit_global())
```

<br> 

and call in your document...<br>

```{r}
#| label: map-function8
#| output: false

create_map(var_id = "SL.TLF.CACT.FE.ZS", 
           title= "Female Labor Force Participation", 
           legend_title = "FLFP %", 
           theme = "inferno", 
           direction = -1)
```

## Your Turn{.smaller}

<br>

- Take the code from module 3.1, paste in an R script and save in a folder
- Call `source()` and then the function in your Quarto document
- Change the values for the five parameters 
- Go back to the code and add a new parameter (like subtitle)
- Try calling the function again
- Write something about your map and render the Quarto document

```{r}
#| label: exercise5_timer
#| echo: false

library(countdown)

countdown(minutes = 10)
```

## Democracy Function{.smaller}

<br>

- Can you make a map function for a democracy indicator?
- Come up with a plan
  - What will the name of the function be?
  - What will the parameters be?
  - What would the
- Take democracy code from last class and implement
- Add more parameters if desired

```{r}
#| label: exercise6_timer
#| echo: false

countdown(minutes = 10, 
          bottom = "10%", 
          right = "10%"
          )
```

## Other Functions

<br>

- What other visualizations could you "functionize"?
- Line charts?
- Bar charts? 
- Scatter plots? 
- Try one!

